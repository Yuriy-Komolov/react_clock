{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","Number","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","hideClock","e","preventDefault","showClock","document","addEventListener","_","prevState","prevClockName","debug","ReactDOM","render","getElementById"],"mappings":"gLAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAUC,SALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAO,IAAIC,OAE3BO,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MACvD,OAZP,kCAeE,WACEN,OAAOO,cAAcR,KAAKF,WAhB9B,oBAmBE,WACE,IAAQW,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGX,KAAKL,MAAMC,MAAMU,cAAcC,OAAO,IAAK,YA/BtD,GAA2BK,aCH3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAGX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAU,EACVT,UAAW,WAHf,EAMEX,QAAUC,SANZ,EAkCEoB,UAAY,SAACC,GACXA,EAAEC,iBACF,EAAKlB,SAAS,CAAEe,UAAU,KApC9B,EAuCEI,UAAY,WACV,EAAKnB,SAAS,CAAEe,UAAU,KAxC9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAexB,KAAKmB,WAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,WAExCtB,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZM,UAAWI,QAEZ,QAhBP,gCAmBE,SAAmBY,EAAUC,GAC3B,MAAgC1B,KAAKL,MAA7Bc,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,SACAS,EAAkBD,EAA7BjB,UAEJA,IAAckB,GAAiBT,GAEjCd,QAAQwB,MAAR,uBAA8BD,EAA9B,eAAkDlB,MAzBxD,kCA6BE,WACEc,SAASC,iBAAiB,cAAexB,KAAKmB,WAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,aA/B5C,oBA2CE,WACE,MAAgCtB,KAAKL,MAA7Bc,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCX,KAAKL,MAAMuB,UACP,cAAC,EAAD,CAAOT,UAAWA,EAAWS,SAAUA,WAlDpD,GAAyBN,aCXzBiB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.84481e3e.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  today: Date,\n}\n\ninterface Prop {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class Clock extends Component<Prop, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = Number();\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = Number();\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { clockName, hasClock } = this.state;\n    const { clockName: prevClockName } = prevState;\n\n    if (clockName !== prevClockName && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  hideClock = (e: MouseEvent) => {\n    e.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock\n          && <Clock clockName={clockName} hasClock={hasClock} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}